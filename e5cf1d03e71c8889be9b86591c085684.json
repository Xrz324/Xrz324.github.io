{"posts": [{"title": "\u7ed9\u73ed\u91cc\u4f20\u6587\u4ef6\u7528...", "date": "2022-07-04T22:00:00-00.00", "path": "/archives/wifi/", "text": "Tools\nhttps://wwi.lanzoup.com/ilO4i04hohcf\nhttps://www.iconfont.cn/\nWallpaper\nhttps://www.imagecu.be/\nhttps://oskarstalberg.com/game/planet/planet.html\nhttps://2017.makemepulse.com/\nhttps://classic.minecraft.net/\n\u70ed\u70b9\npowershell -executionpolicy remotesigned -file\nexit\nset-executionpolicy remotesigned\nAdd-Type -AssemblyName System.Runtime.WindowsRuntime \n\n$asTaskGeneric = ([System.WindowsRuntimeSystemExtensions].GetMethods() | ? { $_.Name -eq &#39;AsTask&#39; -and $_.GetParameters().Count -eq 1 -and $_.GetParameters()[0].ParameterType.Name -eq &#39;IAsyncOperation`1&#39; })[0] \n\nFunction Await($WinRtTask, $ResultType) { \n\n    $asTask = $asTaskGeneric.MakeGenericMethod($ResultType) \n\n    $netTask = $asTask.Invoke($null, @($WinRtTask)) \n\n    $netTask.Wait(-1) | Out-Null \n\n    $netTask.Result \n\n} \n\nFunction AwaitAction($WinRtAction) { \n\n    $asTask = ([System.WindowsRuntimeSystemExtensions].GetMethods() | ? { $_.Name -eq &#39;AsTask&#39; -and $_.GetParameters().Count -eq 1 -and !$_.IsGenericMethod })[0] \n\n    $netTask = $asTask.Invoke($null, @($WinRtAction)) \n\n    $netTask.Wait(-1) | Out-Null \n\n} \n\n$connectionProfile = [Windows.Networking.Connectivity.NetworkInformation,Windows.Networking.Connectivity,ContentType=WindowsRuntime]::GetInternetConnectionProfile() \n\n$tetheringManager = [Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager,Windows.Networking.NetworkOperators,ContentType=WindowsRuntime]::CreateFromConnectionProfile($connectionProfile) \n\nif ($tetheringManager.TetheringOperationalState -eq 1) { \n\n    &quot;&quot; \n\n} \n\nelse{ \n\n    Await ($tetheringManager.StartTetheringAsync()) ([Windows.Networking.NetworkOperators.NetworkOperatorTetheringOperationResult]) \n\n}\n\n\u8d44\u6e90\u7ad9\nhttps://al.chirmyram.com/\n\u5f71\u89c6\u7ad9\nhttps://azx.me/\n", "categories": [{"name": "Tech", "slug": "Tech", "permalink": "/category/Tech/"}], "tags": [{"name": "Powershell", "slug": "Powershell", "permalink": "/tag/Powershell/"}, {"name": "Windows", "slug": "Windows", "permalink": "/tag/Windows/"}, {"name": "Tech", "slug": "Tech", "permalink": "/tag/Tech/"}]}, {"title": "Java\u56db\u79cd\u7ebf\u7a0b\u6c60\u7684\u4f7f\u7528", "date": "2020-09-06T22:00:00-00.00", "path": "/archives/jline/", "text": "\u5b9e\u73b0\n/**\n     * 1.\u521b\u5efa\u4e00\u4e2a\u53ef\u7f13\u5b58\u7ebf\u7a0b\u6c60\uff0c\u5982\u679c\u7ebf\u7a0b\u6c60\u957f\u5ea6\u8d85\u8fc7\u5904\u7406\u9700\u8981\uff0c\u53ef\u7075\u6d3b\u56de\u6536\u7a7a\u95f2\u7ebf\u7a0b\uff0c\u82e5\u65e0\u53ef\u56de\u6536\uff0c\u5219\u65b0\u5efa\u7ebf\u7a0b\n     */\n    public static void cachedThreadPool() {\n        ExecutorService cachedThreadPool = Executors.newCachedThreadPool();\n        for (int i = 0; i &lt; 10; i++) {\n            final int index = i;\n            try {\n                Thread.sleep(1 * 1000);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            cachedThreadPool.execute(new Runnable() {\n                @Override\n                public void run() {\n                    System.out.println(index + &quot;--&quot; + Thread.currentThread().getId());\n                }\n            });\n\n        }\n    }\n\n    /**\n     * 2.\u521b\u5efa\u4e00\u4e2a\u5b9a\u957f\u7ebf\u7a0b\u6c60\uff0c\u53ef\u63a7\u5236\u7ebf\u7a0b\u6700\u5927\u5e76\u53d1\u6570\uff0c\u8d85\u51fa\u7684\u7ebf\u7a0b\u4f1a\u5728\u961f\u5217\u4e2d\u7b49\u5f85\n     */\n\n    public static void newFixedThreadPool() {\n        ExecutorService fixedThreadPool = Executors.newFixedThreadPool(5);\n        for (int i = 0; i &lt; 10; i++) {\n            final int index = i;\n            fixedThreadPool.execute(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        System.out.println(index + &quot;-----&quot; + Thread.currentThread().getId());\n                        Thread.sleep(2000);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n            });\n        }\n        //fixedThreadPool.shutdown();\n    }\n\n    /**\n     * 3.\u521b\u5efa\u4e00\u4e2a\u5b9a\u957f\u7ebf\u7a0b\u6c60\uff0c\u652f\u6301\u5b9a\u65f6\u53ca\u5468\u671f\u6027\u4efb\u52a1\u6267\u884c\n     */\n    public static void newScheduledThreadPool() {\n        ScheduledExecutorService scheduledThreadPool = Executors.newScheduledThreadPool(5);\n        Calendar calendar = Calendar.getInstance();\n        calendar.set(Calendar.HOUR_OF_DAY, 10); // \u65f6\n        calendar.set(Calendar.MINUTE, 53);// \u5206\n        calendar.set(Calendar.SECOND, 00); // \u79d2\n        //\u8ba1\u7b97\u73b0\u5728\u65f6\u95f4\u548c\u8ba1\u5212\u4efb\u52a1\u6267\u884c\u65f6\u95f4\u5dee\u591a\u4e45\uff0c\u5355\u4f4d\u6beb\u79d2\n        Long date = calendar.getTime().getTime() - System.currentTimeMillis();\n//        //\u5ef6\u8fdf3\u79d2\u6267\u884c\n        scheduledThreadPool.schedule(new Runnable() {\n            @Override\n            public void run() {\n                System.out.println(&quot;delay 3 seconds--&quot; + new Date().toLocaleString());\n            }\n        }, 3, TimeUnit.SECONDS);\n\n        //\u5ef6\u8fdf5\u79d2\u6267\u884c\uff0c\u7136\u540e\u6bcf\u96942\u79d2\u6267\u884c\u4e00\u6b21\n        scheduledThreadPool.scheduleAtFixedRate(new Runnable() {\n            @Override\n            public void run() {\n                System.out.println(&quot;\u5ef6\u8fdf5\u79d2\u6267\u884c\uff0c\u7136\u540e\u6bcf\u96942\u79d2\u6267\u884c\u4e00\u6b21--&quot; + new Date().toLocaleString());\n            }\n        }, 5, 2, TimeUnit.SECONDS);\n\n        //\u5b9a\u65f6\u5728\u67d0\u4e00\u65f6\u523b\u6267\u884c\u4efb\u52a1\uff0c\u7136\u540e\u95f4\u9694\u6267\u884c,\u5982\u679c\u65f6\u95f4\u8fc7\u4e86\u4f1a\u7acb\u9a6c\u6267\u884c\n        scheduledThreadPool.scheduleAtFixedRate(new Runnable() {\n            @Override\n            public void run() {\n                System.out.println(&quot;\u5b9a\u65f6\u5728\u67d0\u4e00\u65f6\u523b\u6267\u884c\u4efb\u52a1\uff0c\u7136\u540e\u95f4\u9694\u6267\u884c--&quot; + new Date().toLocaleString());\n            }\n        }, date / 1000, 2, TimeUnit.SECONDS);\n    }\n\n    /**\n     *4. \u521b\u5efa\u4e00\u4e2a\u5355\u7ebf\u7a0b\u5316\u7684\u7ebf\u7a0b\u6c60\uff0c\u5b83\u53ea\u4f1a\u7528\u552f\u4e00\u7684\u5de5\u4f5c\u7ebf\u7a0b\u6765\u6267\u884c\u4efb\u52a1\uff0c\n     * \u4fdd\u8bc1\u6240\u6709\u4efb\u52a1\u6309\u7167\u6307\u5b9a\u987a\u5e8f(FIFO, LIFO, \u4f18\u5148\u7ea7)\u6267\u884c\n     */\n    public static void newSingleThreadExecutor() {\n        ExecutorService singleThreadExecutor = Executors.newSingleThreadExecutor();\n        for (int i = 0; i &lt; 10; i++) {\n            final int index = i;\n            singleThreadExecutor.execute(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        System.out.println(&quot;\u5355\u7ebf\u7a0b\u6267\u884c\u4efb\u52a1\u3002\u3002\u3002&quot;);\n                        Thread.sleep(2000);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n            });\n        }\n    }\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}], "tags": [{"name": "Code", "slug": "Code", "permalink": "/tag/Code/"}, {"name": "Java", "slug": "Java", "permalink": "/tag/Java/"}]}, {"title": "\u521d\u4e2d\u5f71\u96c6", "date": "2020-06-25T19:00:00-00.00", "path": "/archives/Memories/", "text": "\u5982\u679c\u60a8\u5e0c\u671b\u4fdd\u7559\u5168\u90e8\u526f\u672c\u5f71\u50cf\uff0c\u6b22\u8fce\u8054\u7cfb\u6211\u5171\u8ba1522\u5f20\uff0c\u6700\u540e\u4e00\u6b21\u8ffd\u52a0\u4e8e2020-09-16\n\u5f71\u50cf\u526f\u672c\u5df2\u5907\u4efd\u81f3Google Drive,Onedrive\u548cQQ\u7a7a\u95f4\u76f8\u518c\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "categories": [{"name": "\u56de\u5fc6\u5f55", "slug": "\u56de\u5fc6\u5f55", "permalink": "/category/\u56de\u5fc6\u5f55/"}], "tags": [{"name": "Memories", "slug": "Memories", "permalink": "/tag/Memories/"}, {"name": "Friends", "slug": "Friends", "permalink": "/tag/Friends/"}, {"name": "Life", "slug": "Life", "permalink": "/tag/Life/"}]}, {"title": "Hello World!", "date": "2020-01-01T00:00:00-00.00", "path": "/archives/blog/", "text": "\u8fd9\u662f\u4e00\u7bc7\u793a\u4f8b\u6587\u7ae0\uff0c\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u770b\u5230\u5e38\u7528\u9875\u9762\u5143\u7d20\u7684\u663e\u793a\u6548\u679c\uff0c\u540c\u65f6\u4e5f\u662f Markdown \u8bed\u6cd5\u7684\u53c2\u8003\u6587\u7ae0\u3002L2 Heading\nL3 Heading\nL4 Heading\nL5 Heading\nL6 Heading\nParagraph\nWe are creating a world that all may enter without privilege or prejudice accorded by race, economic power, military force, or station of birth.\nWe are creating a world where anyone, anywhere may express his or her beliefs, no matter how singular, without fear of being coerced into silence or conformity.\nInline elements\nBold, Ruby(\u30eb\u30d3), Italic, Strikethrough, Link1\u3002\nBlockquote and nested blockquote\n\u6211\u5439\u8fc7\u4f60\u5439\u8fc7\u7684\u98ce\uff0c\u770b\u8fc7\u540c\u6837\u7684\u98ce\u666f\n\u522b\u7528\u522b\u4eba\u7684\u6545\u4e8b\uff0c\u51b3\u5b9a\u81ea\u5df1\u7684\u4eba\u751f\n\n\nCode\nInline code: int a=1;. Code block:\nint main(int argc , char** argv)\n{\n    std::cout &lt;&lt; &quot;Hello World!\\n&quot;;\n    return 0;\n}\n\nList\nUnordered List\n\nSamsung\nIBM\nMicrosoft\n\n\nGoogle\nApple\nAIML\n\nOrdered List\n\n\u6253\u5f00\u51b0\u7bb1\n\u53f3\u624b\u653e\u5728\u51b0\u7bb1\u95e8\u62c9\u624b\u4e0a\n\u5de6\u624b\u6276\u4f4f\u51b0\u7bb1\u4e3b\u4f53\n\u53f3\u624b\u5411\u540e\u7528\u529b\n\n\n\u628a\u5927\u8c61\u653e\u8fdb\u51b0\u7bb1\n\u5173\u4e0a\u51b0\u7bb1\n\nHorizontal rule\n\nMath\nInline Math: $m\\times n$, math block:\n$$C_{m\\times k}=A_{m\\times n}\\cdot B_{n\\times k}$$\nFigures\nSingle figure\nView\nPhotoset\n\n\n\n\n\n\nTable\n\n\nheader\nheader\n\n\n\n\ncell 1\ncell 2\n\n\ncell 3\ncell 4\n\n\n\nLink Card\n\n                                  AlanDecodeHome page for AlanDecode \u21a9", "categories": [{"name": "Maverick", "slug": "Maverick", "permalink": "/category/Maverick/"}], "tags": [{"name": "Design", "slug": "Design", "permalink": "/tag/Design/"}, {"name": "Blog", "slug": "Blog", "permalink": "/tag/Blog/"}]}], "pages": [{"title": "\u5173\u4e8e", "date": "2020-01-01T19:30:00-00.00", "path": "/about/", "text": "\u8fd9\u662f\u6211\u7f51\u8bfe\u95f2\u7684\u65e0\u804a\u65f6\u5b66\u4e60Python\u540e\u4e2a\u7b2c\u4e00\u4e2a\u9879\u76ee\u4e5f\u662f\u6211\u7684\u4e2a\u4eba\u535a\u5ba2(\u6c34\u8d34\u4e13\u533a)\uff0c\u901a\u8fc7 GitHub\u7ba1\u7406\u4e0e\u6784\u5efa\uff0c\u501f\u52a9Github Action\u81ea\u52a8\u90e8\u7f72\u5e76\u53d1\u5e03\u3002\nContact\n\nCoolApk: @\u6849\u964c\nQQ num: 3240073549\nEmail(Major): Xrz324@outlook.com\nEmail(Spare): Xrz324@qq.com\nTelegram:Anmoe\n\n", "categories": [], "tags": []}]}